{
  "name": "epcc-composable-commerce-demo",
  "version": "1.0.0",
  "description": "EPCC Composable Commerce Demo",
  "author": "Elastic Path Software, Inc.",
  "license": "ISC",
  "private": true,
  "scripts": {
    "start": "npm run build && npm run deploy && npm run config",
    "pretest": "eslint --ignore-pattern 'modules/*/functions/*/test/**' modules/*/functions/**",
    "test": "npm run test:modules",
    "test:modules": "cd modules && foreach-folder 'npm test'",
    "prebuild": "mkdirp dist",
    "build": "npm run build:infrastructure && npm run build:modules && npm run build:collect-build-outputs",
    "build:infrastructure": "ncp api dist/api && node config/scripts/generate-terraform-config.js config/config.json dist/config.tf && cpy '*.tf' dist",
    "build:modules": "cd modules && foreach-folder 'npm run build'",
    "build:collect-build-outputs": "foreach -g 'modules/*/dist' -x 'mkdirp dist/modules/#{reldir} && ncp modules/#{reldir}/dist dist/modules/#{reldir}'",
    "postbuild": "cd dist && terraform init",
    "deploy": "npm run deploy:infrastructure",
    "deploy:infrastructure": "cd dist && terraform apply && terraform apply -auto-approve -var 'create_deployment=true' # TF_LOG=DEBUG",
    "postdeploy": "node config/scripts/generate-postman-env.js config/config.json dist/terraform.tfstate dist/postman.env.json",
    "config": "npm run config:epcc",
    "config:epcc": "npm run config:epcc:datamodel && npm run config:epcc:integrations",
    "config:epcc:datamodel": "foreach -g 'dist/modules/*/config' -x 'newman run dist/#{reldir}/config/config.postman_collection.json -e dist/postman.env.json --folder \"config:epcc:datamodel\"'",
    "config:epcc:integrations": "foreach -g 'dist/modules/*/config' -x 'newman run dist/#{reldir}/config/config.postman_collection.json -e dist/postman.env.json --folder \"config:epcc:integrations\"'",
    "integration-test": "npm run integration-test:modules",
    "integration-test:modules": "foreach -g 'dist/modules/*/integration-test' -x 'newman run dist/#{reldir}/integration-test/integration-test.postman_collection.json -e dist/postman.env.json'",
    "unconfig": "npm run unconfig:epcc",
    "unconfig:epcc": "npm run unconfig:epcc:datamodel && npm run unconfig:epcc:integrations",
    "unconfig:epcc:datamodel": "foreach -g 'dist/modules/*/config' -x 'newman run dist/#{reldir}/config/config.postman_collection.json -e dist/postman.env.json --folder \"unconfig:epcc:datamodel\"'",
    "unconfig:epcc:integrations": "foreach -g 'dist/modules/*/config' -x 'newman run dist/#{reldir}/config/config.postman_collection.json -e dist/postman.env.json --folder \"unconfig:epcc:integrations\"'",
    "preundeploy": "npm run unconfig",
    "undeploy": "npm run undeploy:infrastructure",
    "undeploy:infrastructure": "cd dist && terraform destroy #-auto-approve",
    "postinstall": "npm run postinstall:modules",
    "postinstall:modules": "cd modules && foreach-folder 'npm install'",
    "clean": "rimraf dist/ && npm run clean:modules",
    "clean:modules": "cd modules && foreach-folder 'npm run clean'"
  },
  "devDependencies": {
    "foreach-folder": "^1.1.0",
    "rimraf": "^3.0.2",
    "mkdirp": "^1.0.4",
    "ncp": "^2.0.0",
    "cpy-cli": "^3.1.1",
    "newman": "^5.1.2",
    "foreach-cli": "^1.8.1",
    "eslint": "^7.4.0"
  },
  "dependencies": {}
}
